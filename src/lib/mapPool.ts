import * as vscode from 'vscode';

import {
	Constructor,
	IDictionary,
} from './types';

export interface HasFactoryMethod<V> {
	create: (key: any) => V | Promise<V>
}

/**
* keeps the registry of I class instances,
* created by object constructor with certain config, with config as key
* stores one of them as active(actual) instance
* and returns it for global use by other modules in application
*/

/* Key: –µ—Å–ª–∏ –¥–µ–ª–∞—Ç—å K –∫–æ–Ω—Ñ–∏–≥–æ–º, —Ç–æ –µ—Å–ª–∏ —Ö–æ—Ç–∏–º —Å–æ–∑–¥–∞–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç—ã –≤ –ø—É–ª–µ (–≤ —á–µ–º
—Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ –µ–≥–æ —Å–º—ã—Å–ª –∏ —Å–æ—Å—Ç–æ–∏—Ç) —Ç–æ –Ω–∞–¥–æ –≤ –º–µ—Ç–æ–¥ get –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –ø–æ–ª–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥
—Å–º—ã—Å–ª–∞ –≤ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö —É —Ñ–∞–±—Ä–∏–∫–∏ –Ω–µ—Ç, –µ—Å–ª–∏ –º—ã –µ–µ –ø–ª–∞–Ω–∏—Ä—É–µ–º
–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –ø—É–ª –ø–æ —Å—É—Ç–∏ get —ç—Ç–æ –∑–∞–º–µ–Ω–∞ –º–µ—Ç–æ–¥–∞ create, —Ç–æ—á–Ω–µ–µ
—Ç–∏–ø–∞ –∫–∞–∫ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –Ω–∞–¥ –Ω–∏–º (–Ω–∞–¥ —Ñ–∞–±—Ä–∏–∫–æ–π), –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∞–µ—Ç –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç–∞–Ω—Å–æ–≤ –≤ –ø—É–ª–µ
–Ω–æ –≤–æ—Ç –≤–æ–ø—Ä–æ—Å —Å –∫–ª—é—á–æ–º... –∫–æ–Ω—Ñ–∏–≥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ –º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è,
–Ω–æ –Ω–µ –≤—Å–µ –∏–∑ —ç—Ç–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –∫–∞–∫ –∫–ª—é—á
–°–∏—Ç—É–∞—Ü–∏—è —Å —Å–∞–π–¥–Ω–æ—Ç–æ–º - –º—ã –∏–º–µ–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ ranges
*/

export default class MapPool<K extends object, V> {

	constructor(
		private Factory: HasFactoryMethod<V>,
		protected map: Map<K, V> | WeakMap<K, V>
	) {}

	async get(key: K, create: boolean = true): Promise<V> {
		let item: V;

		const queryResult = this.map.get(key);
		if (queryResult) item = queryResult;
		else {
			item = await this.create(key);
			this.set(key, item);
			// –ø–æ–¥—Ö–æ–¥–∏—Ç —Ç–æ–ª–∫–æ –¥–ª—è Map. –º—ã –Ω–µ –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å dictionary—Ç —Ç.–∫. —Ç–∞–º set –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç
		}

		return item;
	}

	/**
	 * adds instance to pool
	 * can have different implementations depending on used collection type
	 */
	set(key: K, item: V) {
		this.map.set(key, item);
		return item;
	}

	protected create(key: K): V | Promise<V> {
		return this.Factory.create(key);
		/* —á—Ç–æ–±—ã –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ç–æ–≥–æ,
		—á—Ç–æ —Ñ–∞–±—Ä–∏–∫–∞ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø—Ä–æ–º–∏—Å,
		–ø—Ä–∏–¥–µ—Ç—Å—è create –∏ get –¥–µ–ª–∞—Ç—å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º–∏ */
	}
}

// TODO refactor into separate classes MapPool WeakMapPool

// export class WeakMapPool<K extends object, V> extends MapPool <K, V> {
// 	// protected map: WeakMap<K, V> = new WeakMap;
// 	constructor(
// 		Factory: HasFactoryMethod<V>,
// 		protected map: WeakMap<K, V> = new WeakMap,
// 	) {
// 		super(Factory);
// 	}

// 	set(key: K, item: V) {
// 		this.map.set(key, item);
// 		return item;
// 	}
// }

// export class PoolMap<K, V> extends Pool<K, V> {
// 	constructor(
// 		Factory: HasFactoryMethod<V>,
// 		protected map: Map<K, V> = new Map,
// 	) {
// 		super(Factory);
// 	}
// }


// üïÆ f82a72dc-baae-448e-8737-126f0dec5e2d
// @old üïÆ 7e2a51d6-a376-4fa0-b1b9-09cbfb35d967
// üïÆ 3d6ba811-d108-408c-9692-58671b29f68f –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–µ–π—Ç–∞, Proxy
