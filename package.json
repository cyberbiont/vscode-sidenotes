{
	"name": "vscode-sidenotes",
	"displayName": "Sidenotes",
	"description": "annotate your code with external notes, stored separately and shown on hover",
	"publisher": "Yaroslav Larin",
	"version": "1.0.0",
	"license": "MIT",
	"engines": {
		"vscode": "^1.38.0",
		"node": "^10.16.0"
	},
	"categories": [
		"Other"
	],
	"keywords": [
		"notes",
		"comments",
		"Markdown",
		"annotations"
	],
	"activationEvents": [
		"*"
	],
	"main": "./out/extension.js",
	"contributes": {
		"configuration": [
			{
				"title": "Sidenotes",
				"properties": {
					"sidenotes.notesSubfolder": {
						"type": "string",
						"description": "Specifies the folder to use for storing notes. By default the notes are stored in the top level folders of the workspace."
					},
					"sidenotes.prefix": {
						"type": "string",
						"default": "",
						"description": "Specifies the string to use as a prefix for comment markers. Can be used to hook up to other extension such as 'Anchor comments'"
					},
					"sidenotes.defaultMarkdownEditor": {
						"type": "string",
						"enum": [
							"vscode",
							"typora",
							"system default"
						],
						"default": "vscode",
						"description": "Specifies the external editor executable name to open sidenotes"
					},
					"sidenotes.gutterIcon": {
						"type": "boolean",
						"default": true,
						"description": "Whether to show gutter icon for each sidenote"
					},
					"sidenotes.ruler": {
						"type": "boolean",
						"default": true,
						"description": "Whether to show sidenotes in overviewRuler"
					},
					"sidenotes.before": {
						"type": "string",
						"default": "",
						"description": "A string to show before all your comment markers, decorative only"
					},
					"sidenotes.after": {
						"type": "string",
						"default": "ðŸ•®",
						"description": "A string that is used as main sidenote representation marker when id is hidden"
					},
					"sidenotes.hideMarkers": {
						"type": "boolean",
						"default": true,
						"description": "Whether to hide uuid string"
					},
					"sidenotes.colorIndication": {
						"type": "array",
						"items": {
							"type": "string"
						},
						"default": [
							"after",
							"text",
							"ruler"
						],
						"description": "Defines what part of comment anchor will change color, indicating sidenote status."
					},
					"sidenotes.includeFilter": {
						"type": "string",
						"default": "**/*",
						"description": "Glob pattern for files that will be enabled for annotation."
					},
					"sidenotes.excludeFilter": {
						"type": "string",
						"default": "**/{node_modules,.git,.idea,target,out,build,vendor}/**/*",
						"description": "Glob pattern for files that will be disabled for annotation."
					},
					"sidenotes.signature": {
						"type": "string",
						"description": "Signature to be added to your markers"
					},
					"sidenotes.readSignatures": {
						"type": "array",
						"items": {
							"type": "string"
						},
						"description": "Signatures to be processed by extension"
					},
					"sidenotes.readUnsigned": {
						"type": "boolean",
						"default": true,
						"description": "Whether to process unsigned sidenotes"
					},
					"sidenotes.hoverToolbar": {
						"type": "boolean",
						"default": true,
						"description": "Show actions buttons underneath the hover tooltip"
					}
				}
			}
		],
		"commands": [
			{
				"command": "sidenotes.annotate",
				"title": "Sidenotes: Annotate",
				"category": "Sidenotes"
			},
			{
				"command": "sidenotes.annotatePickExt",
				"title": "Sidenotes: Annotate (Custom - Pick)",
				"category": "Sidenotes"
			},
			{
				"command": "sidenotes.annotateInputExt",
				"title": "Sidenotes: Annotate (Custom - Input)",
				"category": "Sidenotes"
			},
			{
				"command": "sidenotes.delete",
				"title": "Sidenotes: Delete",
				"category": "Sidenotes"
			},
			{
				"command": "sidenotes.wipeAnchor",
				"title": "Sidenotes: Wipe Marker",
				"category": "Sidenotes"
			},
			{
				"command": "sidenotes.pruneBroken",
				"title": "Sidenotes: Prune Broken",
				"category": "Sidenotes"
			},
			{
				"command": "sidenotes.pruneEmpty",
				"title": "Sidenotes: Prune Empty",
				"category": "Sidenotes"
			},
			{
				"command": "sidenotes.refresh",
				"title": "Sidenotes: Refresh",
				"category": "Sidenotes"
			},
			{
				"command": "sidenotes.migrate",
				"title": "Sidenotes: Migrate",
				"category": "Sidenotes"
			},
			{
				"command": "sidenotes.extraneous",
				"title": "Sidenotes: Clean",
				"category": "Sidenotes"
			},
			{
				"command": "sidenotes.showMarkers",
				"title": "Sidenotes: Toggle Markers",
				"category": "Sidenotes"
			}
		],
		"keybindings": [
			{
				"command": "sidenotes.annotate",
				"key": "shift+alt+A",
				"mac": "shift+cmd+A",
				"when": "editorTextFocus"
			},
			{
				"command": "sidenotes.delete",
				"key": "shift+alt+D",
				"mac": "shift+cmd+D",
				"when": "editorTextFocus"
			},
			{
				"command": "sidenotes.wipeAnchor",
				"key": "shift+alt+W",
				"mac": "shift+cmd+W",
				"when": "editorTextFocus"
			}
		],
		"menus": {
			"editor/context": [
				{
					"command": "sidenotes.annotate",
					"group": "sidenotes"
				},
				{
					"command": "sidenotes.delete",
					"group": "sidenotes"
				},
				{
					"command": "sidenotes.wipeAnchor",
					"group": "sidenotes"
				}
			]
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.1.1",
		"@types/mocha": "^5.2.6",
		"@types/node": "^10.12.21",
		"@types/uuid": "^3.4.5",
		"@types/vscode": "^1.38.0",
		"glob": "^7.1.4",
		"mocha": "^6.1.4",
		"tslint": "^5.12.1",
		"typescript": "^3.3.1",
		"vscode-test": "^1.2.0"
	},
	"dependencies": {
		"chokidar": "^3.2.2",
		"mime-types": "^2.1.25",
		"open": "^7.0.0",
		"uuid": "^3.3.3"
	}
}
