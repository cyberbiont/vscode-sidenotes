{
	"name": "vscode-sidenotes",
	"displayName": "Sidenotes",
	"description": "annotate your code with external notes, stored separately and shown on hover",
	"version": "1.0.0",
	"publisher": "Yaroslav Larin",
	"engines": {
		"vscode": "^1.38.0"
	},
	"categories": [
		"Other"
	],
	"keywords": [
		"notes", "comments", "Markdown", "annotations", "external"
	],
	"activationEvents": [
		"*"
	],
	"main": "./out/extension.js",
	"contributes": {
		"configuration": [
			{
				"title": "sidenotes configuration",
				"properties": {
					"sidenotes.notesSubfolder": {
						"type": "string",
						"default": ".sidenotes",
						"description": "Specifies the folder to use for storing notes. By default the notes are stored in the top level folders of the workspace."
					},
					"sidenotes.contentFileExtension": {
						"type": "'.md'|'.markdown'|'.mdown'",
						"default": ".md",
						"description": "extension for content files"
					},
					"sidenotes.prefix": {
						"type": "string",
						"default": "",
						"description": "Specifies the string to use as a prefix for comment markers. Can be used to hook up to other extension such as 'Anchor comments'"
					},
					"sidenotes.defaultEditor": {
						"type": "string",
						"default": "vscode",
						"description": "Specifies the external editor executable name to open sidenotes with. Editor should support Markdown. Executable must be in system's PATH to work."
					},
					"sidenotes.gutterIcon": {
						"type": "boolean",
						"default": true,
						"description": "Whether to show gutter icon for each sidenote"
					},
					"sidenotes.ruler": {
						"type": "boolean",
						"default": true,
						"description": "Whether to show sidenotes in overviewRuler"
					},
					"sidenotes.before": {
						"type": "string",
						"default": "",
						"description": "A string to show before all your comment markers, decorative only"
					},
					"sidenotes.after": {
						"type": "string",
						"default": "ðŸ•®",
						"description": "A string that is used as main sidenote representation marker when id is hidden."
					},
					"sidenotes.hideMarkers": {
						"type": "boolean",
						"default": true,
						"description": "Whether to hide uuid string  "
					},
					"sidenotes.colorIndication": {
						"type": "array",
						"items": {
							"type": "string"
						},
						"default": ["after", "text", "ruler"],
						"description": "Defines what part of comment anchor will change color, indicating sidenote status."
					}
				}
			}
		],
		"commands": [
			{
				"command": "sidenotes.annotate",
				"title": "Add or edit sidenote",
				"category": "sidenotes",
				"icon": "images/icon.png"
			},
			{
				"command": "sidenotes.delete",
				"title": "Delete sidenote",
				"category": "sidenotes"
			},
			{
				"command": "sidenotes.pruneBroken",
				"title": "Delete broken sidenotes",
				"category": "sidenotes"
			},
			{
				"command": "sidenotes.pruneEmpty",
				"title": "Delete empty sidenotes",
				"category": "sidenotes"
			},
			{
				"command": "sidenotes.refresh",
				"title": "Reset extension cache and rescan",
				"category": "sidenotes"
			},
			{
				"command": "sidenotes.migrate",
				"title": "Migrate sidenotes from another worskspace",
				"category": "sidenotes"
			},
			{
				"command": "sidenotes.extraneous",
				"title": "Clean extraneous (orphaned) files from current sidenotes folder",
				"category": "sidenotes"
			}
		],
		"menus": {
			"editor/context": [
				{
					"command": "sidenotes.annotate",
					"group": "sidenotes"
				},
				{
					"command": "sidenotes.delete",
					"group": "sidenotes"
				}
			]
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.1.1",
		"@types/mocha": "^5.2.6",
		"@types/node": "^10.12.21",
		"@types/uuid": "^3.4.5",
		"@types/vscode": "^1.38.0",
		"glob": "^7.1.4",
		"mocha": "^6.1.4",
		"tslint": "^5.12.1",
		"typescript": "^3.3.1",
		"vscode-test": "^1.2.0"
	},
	"dependencies": {
		"chokidar": "^3.2.2",
		"uuid": "^3.3.3"
	}
}
